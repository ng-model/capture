{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/pager.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pdf/htmltopdf.component.css","webpack:///./src/app/pdf/htmltopdf.component.html","webpack:///./src/app/pdf/htmltopdf.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/sample.service.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","﻿export * from './pager.service';","﻿export class PagerService {\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 3) {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > totalPages) {\r\n            currentPage = totalPages;\r\n        }\r\n\r\n        let startPage: number, endPage: number;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}","module.exports = \".cstm-logo {\\r\\n  width: 15%;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n  color: #820382;\\r\\n}\\r\\n\"","module.exports = \"<!-- <router-outlet></router-outlet> -->\\r\\n<!-- <div> -->\\r\\n<div class=\\\"container mt-5\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <span class=\\\"d-flex mb-3\\\">\\r\\n      <h2 class=\\\"float-left\\\">Invoice</h2>\\r\\n      <button class=\\\"btn btn-dark float-right\\\" type=\\\"button\\\" (click)=\\\"captureScreen()\\\">Capture</button>\\r\\n    </span>\\r\\n    <!-- items being paged -->\\r\\n    <div class=\\\"card\\\" id=\\\"convert\\\">\\r\\n\\r\\n      <div class=\\\"card-body\\\" *ngFor=\\\"let item of pagedItems\\\">\\r\\n        <span class=\\\"float-left\\\">\\r\\n          <img class=\\\"cstm-logo\\\" src=\\\"assets/hotel.png\\\" alt=\\\"logo\\\">\\r\\n          <h4>Motel 9</h4>\\r\\n        </span>\\r\\n        <span class=\\\"float-right\\\">Date: {{item.timeStamp | date }}</span>\\r\\n        <br>\\r\\n        <span class=\\\"float-right\\\">Payment Type: ACH</span>\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"mt-3 table table-lg table-hover\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>User ID</th>\\r\\n                <th>First Name</th>\\r\\n                <th>Last Name</th>\\r\\n                <th>Amount</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>smichael</td>\\r\\n                <td>\\r\\n                  Michael\\r\\n                </td>\\r\\n                <td>\\r\\n                  Snell\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{item.totalPaymentAmount | currency }}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>djohn</td>\\r\\n                <td>\\r\\n                  John\\r\\n                </td>\\r\\n                <td>\\r\\n                  Doe\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{item.totalPaymentAmount | currency }}\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <table class=\\\"table table-borderless table-hover col-md-4 float-right\\\">\\r\\n          <tr>\\r\\n            <td>Amount</td>\\r\\n            <td> {{(item.totalPaymentAmount)*2 | currency }}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>Processing Fee(3%)</td>\\r\\n            <td>{{((item.totalPaymentAmount*2)/100)*3 | currency:money}}</td>\\r\\n          </tr>\\r\\n          <tr class=\\\"h5 border-top\\\">\\r\\n            <td>Grand Total</td>\\r\\n            <td>{{(item.totalPaymentAmount)*2 + ((item.totalPaymentAmount*2)/100)*3 | currency:money}}</td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <!-- pager -->\\r\\n    <ul class=\\\"pagination float-right\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\r\\n      <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n        <a class=\\\"page-link\\\" (click)=\\\"setPage(1)\\\">First</a>\\r\\n      </li>\\r\\n      <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n        <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n      </li>\\r\\n      <li class=\\\"page-item\\\" *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n        <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n      </li>\\r\\n      <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n        <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n      </li>\\r\\n      <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n        <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { SampleService } from './sample.service';\r\nimport * as jspdf from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport { PagerService } from './_services/index'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app'; items;\r\n\r\n  @ViewChild('content') content: ElementRef;\r\n  constructor(private pagerService: PagerService, private sampleService: SampleService) { }\r\n\r\n  public captureScreen() {\r\n    var data = document.getElementById('convert');\r\n    html2canvas(data).then(canvas => {\r\n      var imgWidth = 208;\r\n      var pageHeight = 295;\r\n      var imgHeight = canvas.height * imgWidth / canvas.width;\r\n      var heightLeft = imgHeight;\r\n      const contentDataURL = canvas.toDataURL('image/png')\r\n      let pdf = new jspdf('p', 'mm', 'a4');\r\n      var position = 0;\r\n      pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n      pdf.save('Invoice.pdf')\r\n    });\r\n  }\r\n  // array of all items to be paged\r\n  private allItems: any = [];\r\n\r\n  // pager object\r\n  pager: any = {};\r\n\r\n  // paged items\r\n  pagedItems: any = [];\r\n\r\n  ngOnInit() {\r\n    // get dummy data\r\n    this.sampleService.myData().subscribe((data) => {\r\n      // set items to json response\r\n      this.items = data;\r\n      this.allItems = this.items.result.revenueData\r\n      // initialize to page 1\r\n      this.setPage(1);\r\n    });\r\n  }\r\n\r\n  setPage(page: number) {\r\n    // get pager object from service\r\n    this.pager = this.pagerService.getPager(this.allItems.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { MatCardModule, MatToolbarModule, MatToolbar, MatButtonModule, MatButton, MatMenuModule } from '@angular/material';\r\nimport { HtmltopdfComponent } from './pdf/htmltopdf.component';\r\nimport { routing } from './routes';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { PagerService } from './_services/index';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HtmltopdfComponent\r\n  ],\r\n  imports: [\r\n    routing,\r\n    BrowserModule, DataTablesModule, HttpClientModule,\r\n    MatCardModule, MatToolbarModule, MatButtonModule, MatMenuModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [\r\n    BrowserModule,\r\n    MatCardModule, MatToolbarModule, MatButtonModule, MatMenuModule\r\n  ],\r\n  providers: [\r\n    PagerService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div #content>\\r\\n    <mat-card>\\r\\n        <button class=\\\"btn btn-info\\\" type=\\\"button\\\" (click)=\\\"captureScreen()\\\">Capture as pdf</button>\\r\\n    </mat-card>\\r\\n  <mat-card>\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header bg-info\\\">\\r\\n        <h4 class=\\\"m-b-0 text-white\\\">Dummy Data to demo print and data table print</h4>\\r\\n      </div>\\r\\n     \\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table id=\\\"convert\\\" class=\\\"table table-lg table-hover\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>User ID</th>\\r\\n                <th>First Name</th>\\r\\n                <th>Last Name</th>\\r\\n                <th>Create Date</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let user of users\\\">\\r\\n                <td>{{user.checkOut}}</td>\\r\\n                <td>\\r\\n                  {{user.reservations}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{user.totalPaymentAmount | currency}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{user.timeStamp | date}}\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-card>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, AfterViewInit, OnInit, ElementRef ,ViewChild} from '@angular/core';\r\nimport * as jspdf from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n// import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SampleService } from '../sample.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n// import swal from 'sweetalert2';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-htmltopdf',\r\n  templateUrl: './htmltopdf.component.html',\r\n  styleUrls: ['./htmltopdf.component.css']\r\n})\r\nexport class HtmltopdfComponent implements AfterViewInit, OnInit {\r\n\r\n  users; result; selectedUser; userPayload; editUserPayload;\r\n  @ViewChild(DataTableDirective)\r\n  dtElement: DataTableDirective;\r\n  dtOptions: any = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  loggedInData; money; dateFormat;\r\n\r\n  @ViewChild('content') content:ElementRef;\r\n  constructor(private sampleService: SampleService) { }\r\n\r\n  public captureScreen()\r\n  {\r\n    var data = document.getElementById('convert');\r\n    html2canvas(data).then(canvas => {\r\n      var imgWidth = 208; \r\n      var pageHeight = 295;  \r\n      var imgHeight = canvas.height * imgWidth / canvas.width;\r\n      var heightLeft = imgHeight;\r\n      const contentDataURL = canvas.toDataURL('image/png')\r\n      let pdf = new jspdf('p', 'mm', 'a4');\r\n      var position = 0;\r\n      pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n      pdf.save('Invoice.pdf')\r\n  });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10,\r\n      dom: 'lBfrtip',\r\n      buttons: [\r\n        {\r\n          extend: 'copy',\r\n          className: 'btn btn-default ml-3',\r\n          init: function (api, node, config) {\r\n            $(node).removeClass('dt-button');\r\n          }\r\n        },\r\n        {\r\n          extend: 'print',\r\n          className: 'btn btn-default',\r\n          init: function (api, node, config) {\r\n            $(node).removeClass('dt-button');\r\n          }\r\n        },\r\n        {\r\n          extend: 'csv',\r\n          className: 'btn btn-default',\r\n          init: function (api, node, config) {\r\n            $(node).removeClass('dt-button');\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    this.getUser();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n  }\r\n\r\n  getUser() {\r\n    this.sampleService.myData().subscribe((data) => {\r\n      this.result = data;\r\n      this.users = this.result.result.revenueData;\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.destroy();\r\n        this.dtTrigger.next();\r\n      });\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HtmltopdfComponent } from './pdf/htmltopdf.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    // { path: '', redirectTo:'pdf',pathMatch:'full' },\r\n    // { path: 'pdf', component: HtmltopdfComponent },\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SampleService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  url = ' https://www.jsonstore.io/ad39e35646fbc483bf1fb8e9572658ab86588f9e400efeb0d43eecd5247b8c75';\r\n\r\n  myData() {\r\n    return this.http.get(`${this.url}/chart`);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n// if (environment.production) {\r\n  enableProdMode();\r\n// }\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}